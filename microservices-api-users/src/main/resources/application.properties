#  Setting port to 0 because we want a random port number to be assigned to this application
#  ${PORT:0} -> Value will be the command line value if it was provided when starting the app
#              If the command line wasn't provided it will start with a value of 0
server.port = ${PORT:0}

spring.application.name = users-ws
eureka.client.serviceUrl.defaultZone = http://localhost:8010/eureka

spring.devtools.restart.enabled = true

#  Since we want our microservice instances to start on a random port number,
#  To disable overriding while registering instances to Eureka we need to make instance id
#  We can hard code the values or we can make them RNG
eureka.instance.instance-id = ${spring.application.name}:${spring.application.instance-id:${random.value}}

### H2 Database ###
spring.h2.console.enabled = true
#  H2 has a firewall, therefore we need to allow other addresses to connect to our database
spring.h2.console.settings.web-allow-others = true

### MySQL Database ###
spring.datasource.url = jdbc:mysql://localhost:3306/photo_app?serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = root
spring.jpa.hibernate.ddl-auto = update

### Web Security ###
# 127.0.0.1 or Private IP
gateway.ip = 192.168.5.10
token.expiration_time = 864000000
token.secret = diajo23immbn3b28bsdp
login.url.path = /users/login

### Connection data for RabbitMQ ###
spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = marin
spring.rabbitmq.password = marin

### Actuator ###
# https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-endpoints.html
management.endpoints.web.exposure.include = mappings

### Feign Client ###
logging.level.com.app.api.users.data.AlbumsServiceClient = DEBUG
feign.hystrix.enabled = true

### Sleuth & Zipkin ###
spring.zipkin.base-url = http://localhost:9411
spring.zipkin.sender.type = web
# 0.1 -> 10%, 1 -> 100%
spring.sleuth.sampler.probability = 1
